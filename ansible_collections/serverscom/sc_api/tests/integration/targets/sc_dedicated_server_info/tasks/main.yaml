---
- name: Check if there are sc_token and sc_endpoint variables
  no_log: true
  fail:
    msg: 'You need to define sc_token and sc_endpoint variables in tests/integration/integration_config.yml'
  when: not sc_endpoint or not sc_token

- name: Test invalid token
  sc_dedicated_server_info:
    token: invalid
    endpoint: '{{ sc_endpoint }}'
  register: test1
  failed_when:
    - test1 is success
    - sc_endpoint not in test1.api_url
    - test1.status_code != 401

- name: Test2, Absent server without failure
  sc_dedicated_server_info:
    token: '{{ sc_token }}'
    endpoint: '{{ sc_endpoint }}'
    fail_on_absent: false
    id: '{{ non_existing_id }}'
  register: test2

- name: Check Test2
  assert:
    that:
      - test2 is not changed
      - test2.found == false
      - test2.ready == false

- name: Test3, Absent server with failure
  sc_dedicated_server_info:
    token: '{{ sc_token }}'
    endpoint: '{{ sc_endpoint }}'
    fail_on_absent: true
    id: '{{ non_existing_id }}'
  register: test3
  ignore_errors: true

- name: Check Test3
  assert:
    that:
      - test3 is not success
      - test3.status_code == 404

- name: Test4, Information for real server
  sc_dedicated_server_info:
    token: '{{ sc_token }}'
    endpoint: '{{ sc_endpoint }}'
    fail_on_absent: false
    id: '{{ existing_server1_id }}'
  register: test4
- debug: var=test4
- name: Check Test4
  assert:
    that:
      - test4 is success
      - test4.id == existing_server1_id
      - test4.configuration|length > 0
      - test4.configuration_details|length > 0
      - test4.found
      - test4.power_status
      - test4.location_id
      - test4.status
      - test4.type == "dedicated_server"
