---
# This role tests both sc_ssh_key and sc_ssh_keys_info modules.
- name: Check if there are sc_token and sc_endpoint variables
  no_log: true
  fail:
    msg: 'You need to define sc_token and sc_endpoint variables in tests/integration/integration_config.yml'
  when: not sc_endpoint or not sc_token

- name: Test invalid token 1
  sc_ssh_key:
    token: invalid
    endpoint: '{{ sc_endpoint }}'
  register: test1
  failed_when:
    - test1 is success
    - sc_endpoint not in test1.api_url
    - test1.status_code != 401

- name: Test invalid token 2
  sc_ssh_keys_info:
    token: invalid
    endpoint: '{{ sc_endpoint }}'
  register: test1_2
  failed_when:
    - test1_2 is success
    - sc_endpoint not in test1.api_url
    - test1_2.status_code != 401

- name: Test2, Absent of absent key by name
  sc_ssh_key:
    token: '{{ sc_token }}'
    endpoint: '{{ sc_endpoint }}'
    name: key that should not exits
    state: absent
  register: test2

- name: Check Test2
  assert:
    that:
      - test2 is not changed

- name: Test3, Absent of absent by fingerprint
  sc_ssh_key:
    token: '{{ sc_token }}'
    endpoint: '{{ sc_endpoint }}'
    fingerprint: '2a:aa:58:61:88:b3:b0:d9:a5:cf:46:4d:75:b1:15:b7'
    state: absent
  register: test3

- name: Check Test3
  assert:
    that:
      - test3 is not changed

- name: Test4, Register a new key in check mode
  sc_ssh_key:
    token: '{{ sc_token }}'
    endpoint: '{{ sc_endpoint }}'
    public_key: '{{ lookup("file", "key1.pub") }}'
    name: 1ea1c330-daee-11ea-ad4c-033b3ea18cbf
    state: present
  check_mode: true
  register: test4

- name: Test4, try to remove it
  sc_ssh_key:
    token: '{{ sc_token }}'
    endpoint: '{{ sc_endpoint }}'
    public_key: '{{ lookup("file", "key1.pub") }}'
    name: 1ea1c330-daee-11ea-ad4c-033b3ea18cbf
    state: absent
  register: test4_try2

- name: Check Test4 again
  assert:
    that:
      - test4 is changed
      - test4_try2 is not changed

- block:
    - name: Test5, Register a new key
      sc_ssh_key:
        token: '{{ sc_token }}'
        endpoint: '{{ sc_endpoint }}'
        public_key: '{{ lookup("file", "key1.pub") }}'
        name: 1ea1c330-daee-11ea-ad4c-033b3ea18cbf
        state: present
      register: test5

    - name: Test5, Register a new key second time
      sc_ssh_key:
        token: '{{ sc_token }}'
        endpoint: '{{ sc_endpoint }}'
        public_key: '{{ lookup("file", "key1.pub") }}'
        name: 1ea1c330-daee-11ea-ad4c-033b3ea18cbf
        state: present
      register: test5_try2

    - name: Check Test5 again
      assert:
        that:
          - test5 is changed
          - test5_try2 is not changed

    - name: Test5-info, get info about keys
      sc_ssh_keys_info:
        token: '{{ sc_token }}'
        endpoint: '{{ sc_endpoint }}'
      register: test5_keylist

    - name: Check test5 keylist
      assert:
        that:
          - "'1ea1c330-daee-11ea-ad4c-033b3ea18cbf' in test5_keylist.ssh_keys|string"

    - name: Test5, Delete a new key in check_mode
      sc_ssh_key:
        token: '{{ sc_token }}'
        endpoint: '{{ sc_endpoint }}'
        public_key: '{{ lookup("file", "key1.pub") }}'
        name: 1ea1c330-daee-11ea-ad4c-033b3ea18cbf
        state: absent
      register: test5_del1
      check_mode: true

    - name: Test5, Delete a new key for real
      sc_ssh_key:
        token: '{{ sc_token }}'
        endpoint: '{{ sc_endpoint }}'
        public_key: '{{ lookup("file", "key1.pub") }}'
        name: 1ea1c330-daee-11ea-ad4c-033b3ea18cbf
        state: absent
      register: test5_del2

    - name: Test5, Delete a new key for real second time
      sc_ssh_key:
        token: '{{ sc_token }}'
        endpoint: '{{ sc_endpoint }}'
        public_key: '{{ lookup("file", "key1.pub") }}'
        name: 1ea1c330-daee-11ea-ad4c-033b3ea18cbf
        state: absent
      register: test5_del3

    - name: Check Test5 deletions
      assert:
        that:
          - test5_del1 is changed
          - test5_del2 is changed
          - test5_del3 is not changed

    - name: Test5.5, Register the previous key again
      sc_ssh_key:
        token: '{{ sc_token }}'
        endpoint: '{{ sc_endpoint }}'
        public_key: '{{ lookup("file", "key1.pub") }}'
        name: 1ea1c330-daee-11ea-ad4c-033b3ea18cbf
        state: present
      register: test6

  always:
    - name: Cleanup key1
      sc_ssh_key:
        token: '{{ sc_token }}'
        endpoint: '{{ sc_endpoint }}'
        public_key: '{{ lookup("file", "key1.pub") }}'
        name: 1ea1c330-daee-11ea-ad4c-033b3ea18cbf
        state: absent
      ignore_errors: true


- block:
    - name: Test6, Register key1
      sc_ssh_key:
        token: '{{ sc_token }}'
        endpoint: '{{ sc_endpoint }}'
        public_key: '{{ lookup("file", "key1.pub") }}'
        name: 1ea1c330-daee-11ea-ad4c-033b3ea18cbf
        state: present

    - name: Test6, set a new key with the same name without replace option
      sc_ssh_key:
        token: '{{ sc_token }}'
        endpoint: '{{ sc_endpoint }}'
        public_key: '{{ lookup("file", "key2.pub") }}'
        name: 1ea1c330-daee-11ea-ad4c-033b3ea18cbf
        state: present
      register: test6
      failed_when: "'Error' not in test6.msg"

    - name: Test7, set a new key with the same name with replace option
      sc_ssh_key:
        token: '{{ sc_token }}'
        endpoint: '{{ sc_endpoint }}'
        public_key: '{{ lookup("file", "key2.pub") }}'
        name: 1ea1c330-daee-11ea-ad4c-033b3ea18cbf
        state: present
        replace: true
      register: test7_replace

    - name: Test7, try again without replace
      sc_ssh_key:
        token: '{{ sc_token }}'
        endpoint: '{{ sc_endpoint }}'
        public_key: '{{ lookup("file", "key2.pub") }}'
        name: 1ea1c330-daee-11ea-ad4c-033b3ea18cbf
        state: present
      register: test7_second


    - name: Check Test7
      assert:
        that:
          - test7_replace is changed
          - test7_second is not changed

  always:
    - name: Cleanup keys
      sc_ssh_key:
        token: '{{ sc_token }}'
        endpoint: '{{ sc_endpoint }}'
        public_key: '{{ lookup("file", item) }}'
        state: absent
      loop:
        - key1.pub
        - key2.pub
      ignore_errors: true
